
TERM03.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000c1c  00000cb0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c1c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000013  0080010e  0080010e  00000cbe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000cbe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000cf0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000d30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c7f  00000000  00000000  00000d90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000096e  00000000  00000000  00001a0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000061b  00000000  00000000  0000237d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000012c  00000000  00000000  00002998  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000526  00000000  00000000  00002ac4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000362  00000000  00000000  00002fea  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000334c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	b9 c0       	rjmp	.+370    	; 0x178 <__vector_1>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	d3 c0       	rjmp	.+422    	; 0x1d4 <__vector_11>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	43 c0       	rjmp	.+134    	; 0xc8 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e1       	ldi	r30, 0x1C	; 28
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 30       	cpi	r26, 0x0E	; 14
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ae e0       	ldi	r26, 0x0E	; 14
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a1 32       	cpi	r26, 0x21	; 33
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	2b d2       	rcall	.+1110   	; 0x51a <main>
  c4:	a9 c5       	rjmp	.+2898   	; 0xc18 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_16>:


 void disp_digit(unsigned char num, unsigned char d)
 {
	 PORTC = digit[num];
	 PORTF = 0x01<<d;
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	2f 93       	push	r18
  d4:	3f 93       	push	r19
  d6:	4f 93       	push	r20
  d8:	5f 93       	push	r21
  da:	6f 93       	push	r22
  dc:	7f 93       	push	r23
  de:	8f 93       	push	r24
  e0:	9f 93       	push	r25
  e2:	af 93       	push	r26
  e4:	bf 93       	push	r27
  e6:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <t>
  ea:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <t+0x1>
  ee:	01 96       	adiw	r24, 0x01	; 1
  f0:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <t+0x1>
  f4:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <t>
  f8:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <state>
  fc:	81 30       	cpi	r24, 0x01	; 1
  fe:	59 f5       	brne	.+86     	; 0x156 <__vector_16+0x8e>
 100:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <t>
 104:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <t+0x1>
 108:	9a 01       	movw	r18, r20
 10a:	36 95       	lsr	r19
 10c:	27 95       	ror	r18
 10e:	36 95       	lsr	r19
 110:	27 95       	ror	r18
 112:	36 95       	lsr	r19
 114:	27 95       	ror	r18
 116:	a5 ec       	ldi	r26, 0xC5	; 197
 118:	b0 e2       	ldi	r27, 0x20	; 32
 11a:	5b d5       	rcall	.+2742   	; 0xbd2 <__umulhisi3>
 11c:	92 95       	swap	r25
 11e:	82 95       	swap	r24
 120:	8f 70       	andi	r24, 0x0F	; 15
 122:	89 27       	eor	r24, r25
 124:	9f 70       	andi	r25, 0x0F	; 15
 126:	89 27       	eor	r24, r25
 128:	68 ee       	ldi	r22, 0xE8	; 232
 12a:	73 e0       	ldi	r23, 0x03	; 3
 12c:	86 9f       	mul	r24, r22
 12e:	90 01       	movw	r18, r0
 130:	87 9f       	mul	r24, r23
 132:	30 0d       	add	r19, r0
 134:	96 9f       	mul	r25, r22
 136:	30 0d       	add	r19, r0
 138:	11 24       	eor	r1, r1
 13a:	42 1b       	sub	r20, r18
 13c:	53 0b       	sbc	r21, r19
 13e:	41 30       	cpi	r20, 0x01	; 1
 140:	51 05       	cpc	r21, r1
 142:	49 f4       	brne	.+18     	; 0x156 <__vector_16+0x8e>
 144:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <sec>
 148:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <sec+0x1>
 14c:	01 97       	sbiw	r24, 0x01	; 1
 14e:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <sec+0x1>
 152:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <sec>
 156:	86 e0       	ldi	r24, 0x06	; 6
 158:	82 bf       	out	0x32, r24	; 50
 15a:	bf 91       	pop	r27
 15c:	af 91       	pop	r26
 15e:	9f 91       	pop	r25
 160:	8f 91       	pop	r24
 162:	7f 91       	pop	r23
 164:	6f 91       	pop	r22
 166:	5f 91       	pop	r21
 168:	4f 91       	pop	r20
 16a:	3f 91       	pop	r19
 16c:	2f 91       	pop	r18
 16e:	0f 90       	pop	r0
 170:	0f be       	out	0x3f, r0	; 63
 172:	0f 90       	pop	r0
 174:	1f 90       	pop	r1
 176:	18 95       	reti

00000178 <__vector_1>:
 178:	1f 92       	push	r1
 17a:	0f 92       	push	r0
 17c:	0f b6       	in	r0, 0x3f	; 63
 17e:	0f 92       	push	r0
 180:	11 24       	eor	r1, r1
 182:	8f 93       	push	r24
 184:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <state>
 188:	81 30       	cpi	r24, 0x01	; 1
 18a:	49 f0       	breq	.+18     	; 0x19e <__vector_1+0x26>
 18c:	18 f0       	brcs	.+6      	; 0x194 <__vector_1+0x1c>
 18e:	82 30       	cpi	r24, 0x02	; 2
 190:	b9 f0       	breq	.+46     	; 0x1c0 <__vector_1+0x48>
 192:	1a c0       	rjmp	.+52     	; 0x1c8 <__vector_1+0x50>
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <state>
 19a:	d8 98       	cbi	0x1b, 0	; 27
 19c:	15 c0       	rjmp	.+42     	; 0x1c8 <__vector_1+0x50>
 19e:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <state>
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	8b bb       	out	0x1b, r24	; 27
 1a6:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <min+0x1>
 1aa:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <min>
 1ae:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <sec+0x1>
 1b2:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <sec>
 1b6:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <t+0x1>
 1ba:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <t>
 1be:	04 c0       	rjmp	.+8      	; 0x1c8 <__vector_1+0x50>
 1c0:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <state>
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	8b bb       	out	0x1b, r24	; 27
 1c8:	8f 91       	pop	r24
 1ca:	0f 90       	pop	r0
 1cc:	0f be       	out	0x3f, r0	; 63
 1ce:	0f 90       	pop	r0
 1d0:	1f 90       	pop	r1
 1d2:	18 95       	reti

000001d4 <__vector_11>:
 1d4:	1f 92       	push	r1
 1d6:	0f 92       	push	r0
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	0f 92       	push	r0
 1dc:	11 24       	eor	r1, r1
 1de:	8f 93       	push	r24
 1e0:	9f 93       	push	r25
 1e2:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <mode>
 1e6:	81 30       	cpi	r24, 0x01	; 1
 1e8:	69 f4       	brne	.+26     	; 0x204 <__vector_11+0x30>
 1ea:	86 b5       	in	r24, 0x26	; 38
 1ec:	97 b5       	in	r25, 0x27	; 39
 1ee:	90 93 1c 01 	sts	0x011C, r25	; 0x80011c <t1+0x1>
 1f2:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <t1>
 1f6:	8e b5       	in	r24, 0x2e	; 46
 1f8:	8f 7b       	andi	r24, 0xBF	; 191
 1fa:	8e bd       	out	0x2e, r24	; 46
 1fc:	82 e0       	ldi	r24, 0x02	; 2
 1fe:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <mode>
 202:	0e c0       	rjmp	.+28     	; 0x220 <__vector_11+0x4c>
 204:	82 30       	cpi	r24, 0x02	; 2
 206:	61 f4       	brne	.+24     	; 0x220 <__vector_11+0x4c>
 208:	86 b5       	in	r24, 0x26	; 38
 20a:	97 b5       	in	r25, 0x27	; 39
 20c:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <t2+0x1>
 210:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <t2>
 214:	87 b7       	in	r24, 0x37	; 55
 216:	8f 7d       	andi	r24, 0xDF	; 223
 218:	87 bf       	out	0x37, r24	; 55
 21a:	83 e0       	ldi	r24, 0x03	; 3
 21c:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <mode>
 220:	9f 91       	pop	r25
 222:	8f 91       	pop	r24
 224:	0f 90       	pop	r0
 226:	0f be       	out	0x3f, r0	; 63
 228:	0f 90       	pop	r0
 22a:	1f 90       	pop	r1
 22c:	18 95       	reti

0000022e <_Z11getDistancev>:
 }

 double getDistance(){
	 return (double)((t2-t1)*4)/58;    // result in terms of cm
 22e:	60 91 19 01 	lds	r22, 0x0119	; 0x800119 <t2>
 232:	70 91 1a 01 	lds	r23, 0x011A	; 0x80011a <t2+0x1>
 236:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <t1>
 23a:	90 91 1c 01 	lds	r25, 0x011C	; 0x80011c <t1+0x1>
 23e:	68 1b       	sub	r22, r24
 240:	79 0b       	sbc	r23, r25
 242:	66 0f       	add	r22, r22
 244:	77 1f       	adc	r23, r23
 246:	66 0f       	add	r22, r22
 248:	77 1f       	adc	r23, r23
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	95 d3       	rcall	.+1834   	; 0x97a <__floatunsisf>
 250:	20 e0       	ldi	r18, 0x00	; 0
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	48 e6       	ldi	r20, 0x68	; 104
 256:	52 e4       	ldi	r21, 0x42	; 66
 258:	28 c3       	rjmp	.+1616   	; 0x8aa <__divsf3>
 }
 25a:	08 95       	ret

0000025c <_Z3FNDv>:

 void FND()
 {
	 if ((t % 10)==0) {
 25c:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <t>
 260:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <t+0x1>
 264:	9a 01       	movw	r18, r20
 266:	ad ec       	ldi	r26, 0xCD	; 205
 268:	bc ec       	ldi	r27, 0xCC	; 204
 26a:	b3 d4       	rcall	.+2406   	; 0xbd2 <__umulhisi3>
 26c:	96 95       	lsr	r25
 26e:	87 95       	ror	r24
 270:	96 95       	lsr	r25
 272:	87 95       	ror	r24
 274:	96 95       	lsr	r25
 276:	87 95       	ror	r24
 278:	9c 01       	movw	r18, r24
 27a:	22 0f       	add	r18, r18
 27c:	33 1f       	adc	r19, r19
 27e:	88 0f       	add	r24, r24
 280:	99 1f       	adc	r25, r25
 282:	88 0f       	add	r24, r24
 284:	99 1f       	adc	r25, r25
 286:	88 0f       	add	r24, r24
 288:	99 1f       	adc	r25, r25
 28a:	82 0f       	add	r24, r18
 28c:	93 1f       	adc	r25, r19
 28e:	48 17       	cp	r20, r24
 290:	59 07       	cpc	r21, r25
 292:	91 f4       	brne	.+36     	; 0x2b8 <_Z3FNDv+0x5c>
		 num= (sec)%10;
 294:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <sec>
 298:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <sec+0x1>
 29c:	6a e0       	ldi	r22, 0x0A	; 10
 29e:	70 e0       	ldi	r23, 0x00	; 0
 2a0:	85 d4       	rcall	.+2314   	; 0xbac <__divmodhi4>
 2a2:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
}


 void disp_digit(unsigned char num, unsigned char d)
 {
	 PORTC = digit[num];
 2a6:	99 27       	eor	r25, r25
 2a8:	fc 01       	movw	r30, r24
 2aa:	ec 5f       	subi	r30, 0xFC	; 252
 2ac:	fe 4f       	sbci	r31, 0xFE	; 254
 2ae:	80 81       	ld	r24, Z
 2b0:	85 bb       	out	0x15, r24	; 21
	 PORTF = 0x01<<d;
 2b2:	88 e0       	ldi	r24, 0x08	; 8
 2b4:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 void FND()
 {
	 if ((t % 10)==0) {
		 num= (sec)%10;
	 disp_digit(num, 3); }
	 if ((t % 10)==2) {
 2b8:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <t>
 2bc:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <t+0x1>
 2c0:	9a 01       	movw	r18, r20
 2c2:	ad ec       	ldi	r26, 0xCD	; 205
 2c4:	bc ec       	ldi	r27, 0xCC	; 204
 2c6:	85 d4       	rcall	.+2314   	; 0xbd2 <__umulhisi3>
 2c8:	96 95       	lsr	r25
 2ca:	87 95       	ror	r24
 2cc:	96 95       	lsr	r25
 2ce:	87 95       	ror	r24
 2d0:	96 95       	lsr	r25
 2d2:	87 95       	ror	r24
 2d4:	9c 01       	movw	r18, r24
 2d6:	22 0f       	add	r18, r18
 2d8:	33 1f       	adc	r19, r19
 2da:	88 0f       	add	r24, r24
 2dc:	99 1f       	adc	r25, r25
 2de:	88 0f       	add	r24, r24
 2e0:	99 1f       	adc	r25, r25
 2e2:	88 0f       	add	r24, r24
 2e4:	99 1f       	adc	r25, r25
 2e6:	82 0f       	add	r24, r18
 2e8:	93 1f       	adc	r25, r19
 2ea:	48 1b       	sub	r20, r24
 2ec:	59 0b       	sbc	r21, r25
 2ee:	42 30       	cpi	r20, 0x02	; 2
 2f0:	51 05       	cpc	r21, r1
 2f2:	b1 f4       	brne	.+44     	; 0x320 <_Z3FNDv+0xc4>
		 num= (sec/10)%10;
 2f4:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <sec>
 2f8:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <sec+0x1>
 2fc:	2a e0       	ldi	r18, 0x0A	; 10
 2fe:	30 e0       	ldi	r19, 0x00	; 0
 300:	b9 01       	movw	r22, r18
 302:	54 d4       	rcall	.+2216   	; 0xbac <__divmodhi4>
 304:	cb 01       	movw	r24, r22
 306:	b9 01       	movw	r22, r18
 308:	51 d4       	rcall	.+2210   	; 0xbac <__divmodhi4>
 30a:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
}


 void disp_digit(unsigned char num, unsigned char d)
 {
	 PORTC = digit[num];
 30e:	99 27       	eor	r25, r25
 310:	fc 01       	movw	r30, r24
 312:	ec 5f       	subi	r30, 0xFC	; 252
 314:	fe 4f       	sbci	r31, 0xFE	; 254
 316:	80 81       	ld	r24, Z
 318:	85 bb       	out	0x15, r24	; 21
	 PORTF = 0x01<<d;
 31a:	84 e0       	ldi	r24, 0x04	; 4
 31c:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
		 num= (sec)%10;
	 disp_digit(num, 3); }
	 if ((t % 10)==2) {
		 num= (sec/10)%10;
	 disp_digit(num, 2); }
	 if ((t % 10)==4) {
 320:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <t>
 324:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <t+0x1>
 328:	9a 01       	movw	r18, r20
 32a:	ad ec       	ldi	r26, 0xCD	; 205
 32c:	bc ec       	ldi	r27, 0xCC	; 204
 32e:	51 d4       	rcall	.+2210   	; 0xbd2 <__umulhisi3>
 330:	96 95       	lsr	r25
 332:	87 95       	ror	r24
 334:	96 95       	lsr	r25
 336:	87 95       	ror	r24
 338:	96 95       	lsr	r25
 33a:	87 95       	ror	r24
 33c:	9c 01       	movw	r18, r24
 33e:	22 0f       	add	r18, r18
 340:	33 1f       	adc	r19, r19
 342:	88 0f       	add	r24, r24
 344:	99 1f       	adc	r25, r25
 346:	88 0f       	add	r24, r24
 348:	99 1f       	adc	r25, r25
 34a:	88 0f       	add	r24, r24
 34c:	99 1f       	adc	r25, r25
 34e:	82 0f       	add	r24, r18
 350:	93 1f       	adc	r25, r19
 352:	48 1b       	sub	r20, r24
 354:	59 0b       	sbc	r21, r25
 356:	44 30       	cpi	r20, 0x04	; 4
 358:	51 05       	cpc	r21, r1
 35a:	91 f4       	brne	.+36     	; 0x380 <_Z3FNDv+0x124>
		 num= (min)%10;
 35c:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <min>
 360:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <min+0x1>
 364:	6a e0       	ldi	r22, 0x0A	; 10
 366:	70 e0       	ldi	r23, 0x00	; 0
 368:	21 d4       	rcall	.+2114   	; 0xbac <__divmodhi4>
 36a:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
}


 void disp_digit(unsigned char num, unsigned char d)
 {
	 PORTC = digit[num];
 36e:	99 27       	eor	r25, r25
 370:	fc 01       	movw	r30, r24
 372:	ec 5f       	subi	r30, 0xFC	; 252
 374:	fe 4f       	sbci	r31, 0xFE	; 254
 376:	80 81       	ld	r24, Z
 378:	85 bb       	out	0x15, r24	; 21
	 PORTF = 0x01<<d;
 37a:	82 e0       	ldi	r24, 0x02	; 2
 37c:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
		 num= (sec/10)%10;
	 disp_digit(num, 2); }
	 if ((t % 10)==4) {
		 num= (min)%10;
	 disp_digit(num, 1); }
	 if ((t % 10)==6) {
 380:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <t>
 384:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <t+0x1>
 388:	9a 01       	movw	r18, r20
 38a:	ad ec       	ldi	r26, 0xCD	; 205
 38c:	bc ec       	ldi	r27, 0xCC	; 204
 38e:	21 d4       	rcall	.+2114   	; 0xbd2 <__umulhisi3>
 390:	96 95       	lsr	r25
 392:	87 95       	ror	r24
 394:	96 95       	lsr	r25
 396:	87 95       	ror	r24
 398:	96 95       	lsr	r25
 39a:	87 95       	ror	r24
 39c:	9c 01       	movw	r18, r24
 39e:	22 0f       	add	r18, r18
 3a0:	33 1f       	adc	r19, r19
 3a2:	88 0f       	add	r24, r24
 3a4:	99 1f       	adc	r25, r25
 3a6:	88 0f       	add	r24, r24
 3a8:	99 1f       	adc	r25, r25
 3aa:	88 0f       	add	r24, r24
 3ac:	99 1f       	adc	r25, r25
 3ae:	82 0f       	add	r24, r18
 3b0:	93 1f       	adc	r25, r19
 3b2:	48 1b       	sub	r20, r24
 3b4:	59 0b       	sbc	r21, r25
 3b6:	46 30       	cpi	r20, 0x06	; 6
 3b8:	51 05       	cpc	r21, r1
 3ba:	b1 f4       	brne	.+44     	; 0x3e8 <_Z3FNDv+0x18c>
		 num= (min/10)%10;
 3bc:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <min>
 3c0:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <min+0x1>
 3c4:	2a e0       	ldi	r18, 0x0A	; 10
 3c6:	30 e0       	ldi	r19, 0x00	; 0
 3c8:	b9 01       	movw	r22, r18
 3ca:	f0 d3       	rcall	.+2016   	; 0xbac <__divmodhi4>
 3cc:	cb 01       	movw	r24, r22
 3ce:	b9 01       	movw	r22, r18
 3d0:	ed d3       	rcall	.+2010   	; 0xbac <__divmodhi4>
 3d2:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
}


 void disp_digit(unsigned char num, unsigned char d)
 {
	 PORTC = digit[num];
 3d6:	99 27       	eor	r25, r25
 3d8:	fc 01       	movw	r30, r24
 3da:	ec 5f       	subi	r30, 0xFC	; 252
 3dc:	fe 4f       	sbci	r31, 0xFE	; 254
 3de:	80 81       	ld	r24, Z
 3e0:	85 bb       	out	0x15, r24	; 21
	 PORTF = 0x01<<d;
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 3e8:	08 95       	ret

000003ea <_Z10initializev>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3ea:	2f ef       	ldi	r18, 0xFF	; 255
 3ec:	81 ee       	ldi	r24, 0xE1	; 225
 3ee:	94 e0       	ldi	r25, 0x04	; 4
 3f0:	21 50       	subi	r18, 0x01	; 1
 3f2:	80 40       	sbci	r24, 0x00	; 0
 3f4:	90 40       	sbci	r25, 0x00	; 0
 3f6:	e1 f7       	brne	.-8      	; 0x3f0 <_Z10initializev+0x6>
 3f8:	00 c0       	rjmp	.+0      	; 0x3fa <_Z10initializev+0x10>
 3fa:	00 00       	nop
 void initialize()
 {

	 _delay_ms(100);

	 DDRD=0x00;
 3fc:	11 ba       	out	0x11, r1	; 17
	 DDRE=0x01;
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	82 b9       	out	0x02, r24	; 2
	 PORTE=0x00;
 402:	13 b8       	out	0x03, r1	; 3
	 TIMRER1_PRESCALE_64;
 404:	8e b5       	in	r24, 0x2e	; 46
 406:	83 60       	ori	r24, 0x03	; 3
 408:	8e bd       	out	0x2e, r24	; 46
	 TIMRER1_CAPTURE_RISING;
 40a:	8e b5       	in	r24, 0x2e	; 46
 40c:	80 64       	ori	r24, 0x40	; 64
 40e:	8e bd       	out	0x2e, r24	; 46
	 mode=TRIG;
 410:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <mode>


	 DDRC = 0xff;
 414:	8f ef       	ldi	r24, 0xFF	; 255
 416:	84 bb       	out	0x14, r24	; 20
	 DDRF = 0x0f;
 418:	9f e0       	ldi	r25, 0x0F	; 15
 41a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	 DDRB = 0x00;
 41e:	17 ba       	out	0x17, r1	; 23
	 DDRA = 0xff;
 420:	8a bb       	out	0x1a, r24	; 26

	 EICRA|=(1<<ISC01);
 422:	ea e6       	ldi	r30, 0x6A	; 106
 424:	f0 e0       	ldi	r31, 0x00	; 0
 426:	80 81       	ld	r24, Z
 428:	82 60       	ori	r24, 0x02	; 2
 42a:	80 83       	st	Z, r24
	 EIMSK|=(1<<INT0);
 42c:	89 b7       	in	r24, 0x39	; 57
 42e:	81 60       	ori	r24, 0x01	; 1
 430:	89 bf       	out	0x39, r24	; 57

	 TCCR0 |= 1<<CS02; // Prescale 64  4us
 432:	83 b7       	in	r24, 0x33	; 51
 434:	84 60       	ori	r24, 0x04	; 4
 436:	83 bf       	out	0x33, r24	; 51
	 TIMSK |= 1<<TOIE0; // Interrupt Enable
 438:	87 b7       	in	r24, 0x37	; 55
 43a:	81 60       	ori	r24, 0x01	; 1
 43c:	87 bf       	out	0x37, r24	; 55
	 TCNT0=6; // 4us x (256 - 6) = 1ms
 43e:	86 e0       	ldi	r24, 0x06	; 6
 440:	82 bf       	out	0x32, r24	; 50
	 sei();
 442:	78 94       	sei

	 distance=50;
 444:	80 e0       	ldi	r24, 0x00	; 0
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	a8 e4       	ldi	r26, 0x48	; 72
 44a:	b2 e4       	ldi	r27, 0x42	; 66
 44c:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <distance>
 450:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <distance+0x1>
 454:	a0 93 1f 01 	sts	0x011F, r26	; 0x80011f <distance+0x2>
 458:	b0 93 20 01 	sts	0x0120, r27	; 0x800120 <distance+0x3>
	 PORTA |= 0x01;
 45c:	d8 9a       	sbi	0x1b, 0	; 27
 45e:	08 95       	ret

00000460 <_Z5ULTRAv>:
 }

 void ULTRA()
 {
 460:	8f 92       	push	r8
 462:	9f 92       	push	r9
 464:	af 92       	push	r10
 466:	bf 92       	push	r11
 468:	cf 92       	push	r12
 46a:	df 92       	push	r13
 46c:	ef 92       	push	r14
 46e:	ff 92       	push	r15

	 if (mode==TRIG){
 470:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <mode>
 474:	81 11       	cpse	r24, r1
 476:	1c c0       	rjmp	.+56     	; 0x4b0 <_Z5ULTRAv+0x50>
		 PORTE|=1<<TRIGER_PIN;
 478:	18 9a       	sbi	0x03, 0	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 47a:	85 e3       	ldi	r24, 0x35	; 53
 47c:	8a 95       	dec	r24
 47e:	f1 f7       	brne	.-4      	; 0x47c <_Z5ULTRAv+0x1c>
 480:	00 00       	nop
		 _delay_us(10);
		 PORTE&=~(1<< TRIGER_PIN);
 482:	18 98       	cbi	0x03, 0	; 3
 484:	8a e1       	ldi	r24, 0x1A	; 26
 486:	8a 95       	dec	r24
 488:	f1 f7       	brne	.-4      	; 0x486 <_Z5ULTRAv+0x26>
 48a:	00 c0       	rjmp	.+0      	; 0x48c <_Z5ULTRAv+0x2c>
		 _delay_us(5);
		 mode=MEAS1;
 48c:	81 e0       	ldi	r24, 0x01	; 1
 48e:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <mode>
		 t1=0.;t2=0.;
 492:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <t1+0x1>
 496:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <t1>
 49a:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <t2+0x1>
 49e:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <t2>
		 TIMRER1_CAPTURE_RISING;
 4a2:	8e b5       	in	r24, 0x2e	; 46
 4a4:	80 64       	ori	r24, 0x40	; 64
 4a6:	8e bd       	out	0x2e, r24	; 46
		 ENABLE_CAPTURE_INTR;
 4a8:	87 b7       	in	r24, 0x37	; 55
 4aa:	80 62       	ori	r24, 0x20	; 32
 4ac:	87 bf       	out	0x37, r24	; 55
 4ae:	2c c0       	rjmp	.+88     	; 0x508 <_Z5ULTRAv+0xa8>
	 }
	 else if (mode==DISP){
 4b0:	83 30       	cpi	r24, 0x03	; 3
 4b2:	51 f5       	brne	.+84     	; 0x508 <_Z5ULTRAv+0xa8>
		 distance=0.7*distance+0.3*getDistance();
 4b4:	c0 90 1d 01 	lds	r12, 0x011D	; 0x80011d <distance>
 4b8:	d0 90 1e 01 	lds	r13, 0x011E	; 0x80011e <distance+0x1>
 4bc:	e0 90 1f 01 	lds	r14, 0x011F	; 0x80011f <distance+0x2>
 4c0:	f0 90 20 01 	lds	r15, 0x0120	; 0x800120 <distance+0x3>
 4c4:	b4 de       	rcall	.-664    	; 0x22e <_Z11getDistancev>
 4c6:	4b 01       	movw	r8, r22
 4c8:	5c 01       	movw	r10, r24
 4ca:	23 e3       	ldi	r18, 0x33	; 51
 4cc:	33 e3       	ldi	r19, 0x33	; 51
 4ce:	43 e3       	ldi	r20, 0x33	; 51
 4d0:	5f e3       	ldi	r21, 0x3F	; 63
 4d2:	c7 01       	movw	r24, r14
 4d4:	b6 01       	movw	r22, r12
 4d6:	07 d3       	rcall	.+1550   	; 0xae6 <__mulsf3>
 4d8:	6b 01       	movw	r12, r22
 4da:	7c 01       	movw	r14, r24
 4dc:	2a e9       	ldi	r18, 0x9A	; 154
 4de:	39 e9       	ldi	r19, 0x99	; 153
 4e0:	49 e9       	ldi	r20, 0x99	; 153
 4e2:	5e e3       	ldi	r21, 0x3E	; 62
 4e4:	c5 01       	movw	r24, r10
 4e6:	b4 01       	movw	r22, r8
 4e8:	fe d2       	rcall	.+1532   	; 0xae6 <__mulsf3>
 4ea:	9b 01       	movw	r18, r22
 4ec:	ac 01       	movw	r20, r24
 4ee:	c7 01       	movw	r24, r14
 4f0:	b6 01       	movw	r22, r12
 4f2:	73 d1       	rcall	.+742    	; 0x7da <__addsf3>
 4f4:	60 93 1d 01 	sts	0x011D, r22	; 0x80011d <distance>
 4f8:	70 93 1e 01 	sts	0x011E, r23	; 0x80011e <distance+0x1>
 4fc:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <distance+0x2>
 500:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <distance+0x3>
		 mode=TRIG;
 504:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <mode>
	 }
 508:	ff 90       	pop	r15
 50a:	ef 90       	pop	r14
 50c:	df 90       	pop	r13
 50e:	cf 90       	pop	r12
 510:	bf 90       	pop	r11
 512:	af 90       	pop	r10
 514:	9f 90       	pop	r9
 516:	8f 90       	pop	r8
 518:	08 95       	ret

0000051a <main>:



int main(void)
{
	initialize();
 51a:	67 df       	rcall	.-306    	; 0x3ea <_Z10initializev>
    while (1) 
    {
	ULTRA();

	if(distance>100)
	distance=99;
 51c:	0f 2e       	mov	r0, r31
 51e:	c1 2c       	mov	r12, r1
 520:	d1 2c       	mov	r13, r1
 522:	f6 ec       	ldi	r31, 0xC6	; 198
 524:	ef 2e       	mov	r14, r31
 526:	f2 e4       	ldi	r31, 0x42	; 66
 528:	ff 2e       	mov	r15, r31
 52a:	f0 2d       	mov	r31, r0
		state=ALARM;
		PORTA&=~0x3C;
		}
		if(state==RUN){
		if(sec==0)
		{sec=60; min-=1;}
 52c:	0c e3       	ldi	r16, 0x3C	; 60
 52e:	10 e0       	ldi	r17, 0x00	; 0

	case RUN:
		{
		if((min==0)&&(sec==0))
		{
		state=ALARM;
 530:	68 94       	set
 532:	bb 24       	eor	r11, r11
 534:	b1 f8       	bld	r11, 1
	case READY:
		if (((PINB & 0x30)==0x10)&&(pre_min==0x30))
		min++;
		if (((PINB & 0x30)==0x20)&&(pre_min==0x30))
		sec++;
		PORTA=0x01;
 536:	d1 e0       	ldi	r29, 0x01	; 1
		PORTA|=(0x14);
		
			if(distance<20){
			while (1) //방향바꾸기
			{
				if(t%100==3)
 538:	c4 e6       	ldi	r28, 0x64	; 100
{
	initialize();

    while (1) 
    {
	ULTRA();
 53a:	92 df       	rcall	.-220    	; 0x460 <_Z5ULTRAv>

	if(distance>100)
 53c:	60 91 1d 01 	lds	r22, 0x011D	; 0x80011d <distance>
 540:	70 91 1e 01 	lds	r23, 0x011E	; 0x80011e <distance+0x1>
 544:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <distance+0x2>
 548:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <distance+0x3>
 54c:	20 e0       	ldi	r18, 0x00	; 0
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	48 ec       	ldi	r20, 0xC8	; 200
 552:	52 e4       	ldi	r21, 0x42	; 66
 554:	c4 d2       	rcall	.+1416   	; 0xade <__gesf2>
 556:	18 16       	cp	r1, r24
 558:	44 f4       	brge	.+16     	; 0x56a <main+0x50>
	distance=99;
 55a:	c0 92 1d 01 	sts	0x011D, r12	; 0x80011d <distance>
 55e:	d0 92 1e 01 	sts	0x011E, r13	; 0x80011e <distance+0x1>
 562:	e0 92 1f 01 	sts	0x011F, r14	; 0x80011f <distance+0x2>
 566:	f0 92 20 01 	sts	0x0120, r15	; 0x800120 <distance+0x3>
	if(distance<1)
 56a:	60 91 1d 01 	lds	r22, 0x011D	; 0x80011d <distance>
 56e:	70 91 1e 01 	lds	r23, 0x011E	; 0x80011e <distance+0x1>
 572:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <distance+0x2>
 576:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <distance+0x3>
 57a:	20 e0       	ldi	r18, 0x00	; 0
 57c:	30 e0       	ldi	r19, 0x00	; 0
 57e:	40 e8       	ldi	r20, 0x80	; 128
 580:	5f e3       	ldi	r21, 0x3F	; 63
 582:	8f d1       	rcall	.+798    	; 0x8a2 <__cmpsf2>
 584:	88 23       	and	r24, r24
 586:	64 f4       	brge	.+24     	; 0x5a0 <main+0x86>
	distance=1;
 588:	80 e0       	ldi	r24, 0x00	; 0
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	a0 e8       	ldi	r26, 0x80	; 128
 58e:	bf e3       	ldi	r27, 0x3F	; 63
 590:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <distance>
 594:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <distance+0x1>
 598:	a0 93 1f 01 	sts	0x011F, r26	; 0x80011f <distance+0x2>
 59c:	b0 93 20 01 	sts	0x0120, r27	; 0x800120 <distance+0x3>

	FND();
 5a0:	5d de       	rcall	.-838    	; 0x25c <_Z3FNDv>

		
	switch (state) {
 5a2:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <state>
 5a6:	81 30       	cpi	r24, 0x01	; 1
 5a8:	99 f1       	breq	.+102    	; 0x610 <main+0xf6>
 5aa:	20 f0       	brcs	.+8      	; 0x5b4 <main+0x9a>
 5ac:	82 30       	cpi	r24, 0x02	; 2
 5ae:	09 f4       	brne	.+2      	; 0x5b2 <main+0x98>
 5b0:	5b c0       	rjmp	.+182    	; 0x668 <main+0x14e>
 5b2:	ed c0       	rjmp	.+474    	; 0x78e <main+0x274>
	case READY:
		if (((PINB & 0x30)==0x10)&&(pre_min==0x30))
 5b4:	86 b3       	in	r24, 0x16	; 22
 5b6:	80 73       	andi	r24, 0x30	; 48
 5b8:	80 31       	cpi	r24, 0x10	; 16
 5ba:	41 f4       	brne	.+16     	; 0x5cc <main+0xb2>
 5bc:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <pre_min>
 5c0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <pre_min+0x1>
 5c4:	c0 97       	sbiw	r24, 0x30	; 48
 5c6:	09 f0       	breq	.+2      	; 0x5ca <main+0xb0>
 5c8:	05 c1       	rjmp	.+522    	; 0x7d4 <main+0x2ba>
 5ca:	f0 c0       	rjmp	.+480    	; 0x7ac <main+0x292>
		min++;
		if (((PINB & 0x30)==0x20)&&(pre_min==0x30))
 5cc:	86 b3       	in	r24, 0x16	; 22
 5ce:	80 73       	andi	r24, 0x30	; 48
 5d0:	80 32       	cpi	r24, 0x20	; 32
 5d2:	39 f4       	brne	.+14     	; 0x5e2 <main+0xc8>
 5d4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <pre_min>
 5d8:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <pre_min+0x1>
 5dc:	c0 97       	sbiw	r24, 0x30	; 48
 5de:	09 f4       	brne	.+2      	; 0x5e2 <main+0xc8>
 5e0:	ef c0       	rjmp	.+478    	; 0x7c0 <main+0x2a6>
		sec++;
		PORTA=0x01;
 5e2:	db bb       	out	0x1b, r29	; 27
		if (sec == 60)
 5e4:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <sec>
 5e8:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <sec+0x1>
 5ec:	cc 97       	sbiw	r24, 0x3c	; 60
 5ee:	21 f4       	brne	.+8      	; 0x5f8 <main+0xde>
		sec=0;
 5f0:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <sec+0x1>
 5f4:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <sec>
		if (min == 60)
 5f8:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <min>
 5fc:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <min+0x1>
 600:	cc 97       	sbiw	r24, 0x3c	; 60
 602:	09 f0       	breq	.+2      	; 0x606 <main+0xec>
 604:	c4 c0       	rjmp	.+392    	; 0x78e <main+0x274>
		min=0;
 606:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <min+0x1>
 60a:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <min>
 60e:	bf c0       	rjmp	.+382    	; 0x78e <main+0x274>
		break;

	case RUN:
		{
		if((min==0)&&(sec==0))
 610:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <min>
 614:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <min+0x1>
 618:	89 2b       	or	r24, r25
 61a:	89 f4       	brne	.+34     	; 0x63e <main+0x124>
 61c:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <sec>
 620:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <sec+0x1>
 624:	89 2b       	or	r24, r25
 626:	09 f0       	breq	.+2      	; 0x62a <main+0x110>
 628:	b2 c0       	rjmp	.+356    	; 0x78e <main+0x274>
		{
		state=ALARM;
 62a:	b0 92 15 01 	sts	0x0115, r11	; 0x800115 <state>
		PORTA&=~0x3C;
 62e:	8b b3       	in	r24, 0x1b	; 27
 630:	83 7c       	andi	r24, 0xC3	; 195
 632:	8b bb       	out	0x1b, r24	; 27
		}
		if(state==RUN){
 634:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <state>
 638:	81 30       	cpi	r24, 0x01	; 1
 63a:	09 f0       	breq	.+2      	; 0x63e <main+0x124>
 63c:	a8 c0       	rjmp	.+336    	; 0x78e <main+0x274>
		if(sec==0)
 63e:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <sec>
 642:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <sec+0x1>
 646:	89 2b       	or	r24, r25
 648:	09 f0       	breq	.+2      	; 0x64c <main+0x132>
 64a:	a1 c0       	rjmp	.+322    	; 0x78e <main+0x274>
		{sec=60; min-=1;}
 64c:	10 93 12 01 	sts	0x0112, r17	; 0x800112 <sec+0x1>
 650:	00 93 11 01 	sts	0x0111, r16	; 0x800111 <sec>
 654:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <min>
 658:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <min+0x1>
 65c:	01 97       	sbiw	r24, 0x01	; 1
 65e:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <min+0x1>
 662:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <min>
 666:	93 c0       	rjmp	.+294    	; 0x78e <main+0x274>
		//PORTA -	7	6	5	4	3	2	1	0
		//					d11	d12	d21	d22	spe	led


		//speaker와 50% dc모터 66%
		if(t%2==1)
 668:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <t>
 66c:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <t+0x1>
 670:	80 ff       	sbrs	r24, 0
 672:	02 c0       	rjmp	.+4      	; 0x678 <main+0x15e>
		PORTA|=(0x02);
 674:	d9 9a       	sbi	0x1b, 1	; 27
 676:	01 c0       	rjmp	.+2      	; 0x67a <main+0x160>
		else
		PORTA&=~(0x02);
 678:	d9 98       	cbi	0x1b, 1	; 27

		if(t%3==1)
 67a:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <t>
 67e:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <t+0x1>
 682:	9a 01       	movw	r18, r20
 684:	ab ea       	ldi	r26, 0xAB	; 171
 686:	ba ea       	ldi	r27, 0xAA	; 170
 688:	a4 d2       	rcall	.+1352   	; 0xbd2 <__umulhisi3>
 68a:	96 95       	lsr	r25
 68c:	87 95       	ror	r24
 68e:	9c 01       	movw	r18, r24
 690:	22 0f       	add	r18, r18
 692:	33 1f       	adc	r19, r19
 694:	82 0f       	add	r24, r18
 696:	93 1f       	adc	r25, r19
 698:	48 1b       	sub	r20, r24
 69a:	59 0b       	sbc	r21, r25
 69c:	41 30       	cpi	r20, 0x01	; 1
 69e:	51 05       	cpc	r21, r1
 6a0:	21 f4       	brne	.+8      	; 0x6aa <main+0x190>
		PORTA&=~(0x14);	
 6a2:	8b b3       	in	r24, 0x1b	; 27
 6a4:	8b 7e       	andi	r24, 0xEB	; 235
 6a6:	8b bb       	out	0x1b, r24	; 27
 6a8:	03 c0       	rjmp	.+6      	; 0x6b0 <main+0x196>
		else
		PORTA|=(0x14);
 6aa:	8b b3       	in	r24, 0x1b	; 27
 6ac:	84 61       	ori	r24, 0x14	; 20
 6ae:	8b bb       	out	0x1b, r24	; 27
		
			if(distance<20){
 6b0:	60 91 1d 01 	lds	r22, 0x011D	; 0x80011d <distance>
 6b4:	70 91 1e 01 	lds	r23, 0x011E	; 0x80011e <distance+0x1>
 6b8:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <distance+0x2>
 6bc:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <distance+0x3>
 6c0:	20 e0       	ldi	r18, 0x00	; 0
 6c2:	30 e0       	ldi	r19, 0x00	; 0
 6c4:	40 ea       	ldi	r20, 0xA0	; 160
 6c6:	51 e4       	ldi	r21, 0x41	; 65
 6c8:	ec d0       	rcall	.+472    	; 0x8a2 <__cmpsf2>
 6ca:	88 23       	and	r24, r24
 6cc:	0c f0       	brlt	.+2      	; 0x6d0 <main+0x1b6>
 6ce:	5f c0       	rjmp	.+190    	; 0x78e <main+0x274>
			while (1) //방향바꾸기
			{
				if(t%100==3)
 6d0:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <t>
 6d4:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <t+0x1>
 6d8:	9a 01       	movw	r18, r20
 6da:	36 95       	lsr	r19
 6dc:	27 95       	ror	r18
 6de:	36 95       	lsr	r19
 6e0:	27 95       	ror	r18
 6e2:	ab e7       	ldi	r26, 0x7B	; 123
 6e4:	b4 e1       	ldi	r27, 0x14	; 20
 6e6:	75 d2       	rcall	.+1258   	; 0xbd2 <__umulhisi3>
 6e8:	96 95       	lsr	r25
 6ea:	87 95       	ror	r24
 6ec:	c8 9f       	mul	r28, r24
 6ee:	90 01       	movw	r18, r0
 6f0:	c9 9f       	mul	r28, r25
 6f2:	30 0d       	add	r19, r0
 6f4:	11 24       	eor	r1, r1
 6f6:	42 1b       	sub	r20, r18
 6f8:	53 0b       	sbc	r21, r19
 6fa:	43 30       	cpi	r20, 0x03	; 3
 6fc:	51 05       	cpc	r21, r1
 6fe:	49 f4       	brne	.+18     	; 0x712 <main+0x1f8>
				K++;
 700:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <K>
 704:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <K+0x1>
 708:	01 96       	adiw	r24, 0x01	; 1
 70a:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <K+0x1>
 70e:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <K>
				if((0<K)&&(K<700))
 712:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <K>
 716:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <K+0x1>
 71a:	01 97       	sbiw	r24, 0x01	; 1
 71c:	8b 3b       	cpi	r24, 0xBB	; 187
 71e:	92 40       	sbci	r25, 0x02	; 2
 720:	18 f4       	brcc	.+6      	; 0x728 <main+0x20e>
				PORTA|=0x28;//뒤로갔다가
 722:	8b b3       	in	r24, 0x1b	; 27
 724:	88 62       	ori	r24, 0x28	; 40
 726:	8b bb       	out	0x1b, r24	; 27
				if((K<1220)&&(K>700))
 728:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <K>
 72c:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <K+0x1>
 730:	8d 5b       	subi	r24, 0xBD	; 189
 732:	92 40       	sbci	r25, 0x02	; 2
 734:	87 30       	cpi	r24, 0x07	; 7
 736:	92 40       	sbci	r25, 0x02	; 2
 738:	08 f4       	brcc	.+2      	; 0x73c <main+0x222>
				PORTA&=~0x08; //회전
 73a:	db 98       	cbi	0x1b, 3	; 27

				//speaker와 50% dc모터 66%
				if(t%2==1)
 73c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <t>
 740:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <t+0x1>
 744:	80 ff       	sbrs	r24, 0
 746:	04 c0       	rjmp	.+8      	; 0x750 <main+0x236>
				PORTA|=((0x02)|(0x14));
 748:	8b b3       	in	r24, 0x1b	; 27
 74a:	86 61       	ori	r24, 0x16	; 22
 74c:	8b bb       	out	0x1b, r24	; 27
 74e:	03 c0       	rjmp	.+6      	; 0x756 <main+0x23c>
				else
				PORTA&=~((0x02)|(0x14));
 750:	8b b3       	in	r24, 0x1b	; 27
 752:	89 7e       	andi	r24, 0xE9	; 233
 754:	8b bb       	out	0x1b, r24	; 27

	
					FND();
 756:	82 dd       	rcall	.-1276   	; 0x25c <_Z3FNDv>

				if(K>1220)
 758:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <K>
 75c:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <K+0x1>
 760:	85 3c       	cpi	r24, 0xC5	; 197
 762:	94 40       	sbci	r25, 0x04	; 4
 764:	0c f4       	brge	.+2      	; 0x768 <main+0x24e>
 766:	b4 cf       	rjmp	.-152    	; 0x6d0 <main+0x1b6>
				{K=0;
 768:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <K+0x1>
 76c:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <K>
				PORTA&=~0x28;//전진
 770:	8b b3       	in	r24, 0x1b	; 27
 772:	87 7d       	andi	r24, 0xD7	; 215
 774:	8b bb       	out	0x1b, r24	; 27
				distance=20;
 776:	80 e0       	ldi	r24, 0x00	; 0
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	a0 ea       	ldi	r26, 0xA0	; 160
 77c:	b1 e4       	ldi	r27, 0x41	; 65
 77e:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <distance>
 782:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <distance+0x1>
 786:	a0 93 1f 01 	sts	0x011F, r26	; 0x80011f <distance+0x2>
 78a:	b0 93 20 01 	sts	0x0120, r27	; 0x800120 <distance+0x3>
	break;
	}
	
			

	pre_min=(PINB & 0x30);
 78e:	86 b3       	in	r24, 0x16	; 22
 790:	80 73       	andi	r24, 0x30	; 48
 792:	90 e0       	ldi	r25, 0x00	; 0
 794:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <pre_min+0x1>
 798:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <pre_min>
	pre_sec=(PINB & 0x30);
 79c:	86 b3       	in	r24, 0x16	; 22
 79e:	80 73       	andi	r24, 0x30	; 48
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 7a6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	}




int main(void)
 7aa:	c7 ce       	rjmp	.-626    	; 0x53a <main+0x20>

		
	switch (state) {
	case READY:
		if (((PINB & 0x30)==0x10)&&(pre_min==0x30))
		min++;
 7ac:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <min>
 7b0:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <min+0x1>
 7b4:	01 96       	adiw	r24, 0x01	; 1
 7b6:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <min+0x1>
 7ba:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <min>
 7be:	06 cf       	rjmp	.-500    	; 0x5cc <main+0xb2>
		if (((PINB & 0x30)==0x20)&&(pre_min==0x30))
		sec++;
 7c0:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <sec>
 7c4:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <sec+0x1>
 7c8:	01 96       	adiw	r24, 0x01	; 1
 7ca:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <sec+0x1>
 7ce:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <sec>
 7d2:	07 cf       	rjmp	.-498    	; 0x5e2 <main+0xc8>
		
	switch (state) {
	case READY:
		if (((PINB & 0x30)==0x10)&&(pre_min==0x30))
		min++;
		if (((PINB & 0x30)==0x20)&&(pre_min==0x30))
 7d4:	86 b3       	in	r24, 0x16	; 22
 7d6:	05 cf       	rjmp	.-502    	; 0x5e2 <main+0xc8>

000007d8 <__subsf3>:
 7d8:	50 58       	subi	r21, 0x80	; 128

000007da <__addsf3>:
 7da:	bb 27       	eor	r27, r27
 7dc:	aa 27       	eor	r26, r26
 7de:	0e d0       	rcall	.+28     	; 0x7fc <__addsf3x>
 7e0:	44 c1       	rjmp	.+648    	; 0xa6a <__fp_round>
 7e2:	35 d1       	rcall	.+618    	; 0xa4e <__fp_pscA>
 7e4:	30 f0       	brcs	.+12     	; 0x7f2 <__addsf3+0x18>
 7e6:	3a d1       	rcall	.+628    	; 0xa5c <__fp_pscB>
 7e8:	20 f0       	brcs	.+8      	; 0x7f2 <__addsf3+0x18>
 7ea:	31 f4       	brne	.+12     	; 0x7f8 <__addsf3+0x1e>
 7ec:	9f 3f       	cpi	r25, 0xFF	; 255
 7ee:	11 f4       	brne	.+4      	; 0x7f4 <__addsf3+0x1a>
 7f0:	1e f4       	brtc	.+6      	; 0x7f8 <__addsf3+0x1e>
 7f2:	2a c1       	rjmp	.+596    	; 0xa48 <__fp_nan>
 7f4:	0e f4       	brtc	.+2      	; 0x7f8 <__addsf3+0x1e>
 7f6:	e0 95       	com	r30
 7f8:	e7 fb       	bst	r30, 7
 7fa:	20 c1       	rjmp	.+576    	; 0xa3c <__fp_inf>

000007fc <__addsf3x>:
 7fc:	e9 2f       	mov	r30, r25
 7fe:	46 d1       	rcall	.+652    	; 0xa8c <__fp_split3>
 800:	80 f3       	brcs	.-32     	; 0x7e2 <__addsf3+0x8>
 802:	ba 17       	cp	r27, r26
 804:	62 07       	cpc	r22, r18
 806:	73 07       	cpc	r23, r19
 808:	84 07       	cpc	r24, r20
 80a:	95 07       	cpc	r25, r21
 80c:	18 f0       	brcs	.+6      	; 0x814 <__addsf3x+0x18>
 80e:	71 f4       	brne	.+28     	; 0x82c <__addsf3x+0x30>
 810:	9e f5       	brtc	.+102    	; 0x878 <__addsf3x+0x7c>
 812:	5e c1       	rjmp	.+700    	; 0xad0 <__fp_zero>
 814:	0e f4       	brtc	.+2      	; 0x818 <__addsf3x+0x1c>
 816:	e0 95       	com	r30
 818:	0b 2e       	mov	r0, r27
 81a:	ba 2f       	mov	r27, r26
 81c:	a0 2d       	mov	r26, r0
 81e:	0b 01       	movw	r0, r22
 820:	b9 01       	movw	r22, r18
 822:	90 01       	movw	r18, r0
 824:	0c 01       	movw	r0, r24
 826:	ca 01       	movw	r24, r20
 828:	a0 01       	movw	r20, r0
 82a:	11 24       	eor	r1, r1
 82c:	ff 27       	eor	r31, r31
 82e:	59 1b       	sub	r21, r25
 830:	99 f0       	breq	.+38     	; 0x858 <__addsf3x+0x5c>
 832:	59 3f       	cpi	r21, 0xF9	; 249
 834:	50 f4       	brcc	.+20     	; 0x84a <__addsf3x+0x4e>
 836:	50 3e       	cpi	r21, 0xE0	; 224
 838:	68 f1       	brcs	.+90     	; 0x894 <__addsf3x+0x98>
 83a:	1a 16       	cp	r1, r26
 83c:	f0 40       	sbci	r31, 0x00	; 0
 83e:	a2 2f       	mov	r26, r18
 840:	23 2f       	mov	r18, r19
 842:	34 2f       	mov	r19, r20
 844:	44 27       	eor	r20, r20
 846:	58 5f       	subi	r21, 0xF8	; 248
 848:	f3 cf       	rjmp	.-26     	; 0x830 <__addsf3x+0x34>
 84a:	46 95       	lsr	r20
 84c:	37 95       	ror	r19
 84e:	27 95       	ror	r18
 850:	a7 95       	ror	r26
 852:	f0 40       	sbci	r31, 0x00	; 0
 854:	53 95       	inc	r21
 856:	c9 f7       	brne	.-14     	; 0x84a <__addsf3x+0x4e>
 858:	7e f4       	brtc	.+30     	; 0x878 <__addsf3x+0x7c>
 85a:	1f 16       	cp	r1, r31
 85c:	ba 0b       	sbc	r27, r26
 85e:	62 0b       	sbc	r22, r18
 860:	73 0b       	sbc	r23, r19
 862:	84 0b       	sbc	r24, r20
 864:	ba f0       	brmi	.+46     	; 0x894 <__addsf3x+0x98>
 866:	91 50       	subi	r25, 0x01	; 1
 868:	a1 f0       	breq	.+40     	; 0x892 <__addsf3x+0x96>
 86a:	ff 0f       	add	r31, r31
 86c:	bb 1f       	adc	r27, r27
 86e:	66 1f       	adc	r22, r22
 870:	77 1f       	adc	r23, r23
 872:	88 1f       	adc	r24, r24
 874:	c2 f7       	brpl	.-16     	; 0x866 <__addsf3x+0x6a>
 876:	0e c0       	rjmp	.+28     	; 0x894 <__addsf3x+0x98>
 878:	ba 0f       	add	r27, r26
 87a:	62 1f       	adc	r22, r18
 87c:	73 1f       	adc	r23, r19
 87e:	84 1f       	adc	r24, r20
 880:	48 f4       	brcc	.+18     	; 0x894 <__addsf3x+0x98>
 882:	87 95       	ror	r24
 884:	77 95       	ror	r23
 886:	67 95       	ror	r22
 888:	b7 95       	ror	r27
 88a:	f7 95       	ror	r31
 88c:	9e 3f       	cpi	r25, 0xFE	; 254
 88e:	08 f0       	brcs	.+2      	; 0x892 <__addsf3x+0x96>
 890:	b3 cf       	rjmp	.-154    	; 0x7f8 <__addsf3+0x1e>
 892:	93 95       	inc	r25
 894:	88 0f       	add	r24, r24
 896:	08 f0       	brcs	.+2      	; 0x89a <__addsf3x+0x9e>
 898:	99 27       	eor	r25, r25
 89a:	ee 0f       	add	r30, r30
 89c:	97 95       	ror	r25
 89e:	87 95       	ror	r24
 8a0:	08 95       	ret

000008a2 <__cmpsf2>:
 8a2:	a8 d0       	rcall	.+336    	; 0x9f4 <__fp_cmp>
 8a4:	08 f4       	brcc	.+2      	; 0x8a8 <__cmpsf2+0x6>
 8a6:	81 e0       	ldi	r24, 0x01	; 1
 8a8:	08 95       	ret

000008aa <__divsf3>:
 8aa:	0c d0       	rcall	.+24     	; 0x8c4 <__divsf3x>
 8ac:	de c0       	rjmp	.+444    	; 0xa6a <__fp_round>
 8ae:	d6 d0       	rcall	.+428    	; 0xa5c <__fp_pscB>
 8b0:	40 f0       	brcs	.+16     	; 0x8c2 <__divsf3+0x18>
 8b2:	cd d0       	rcall	.+410    	; 0xa4e <__fp_pscA>
 8b4:	30 f0       	brcs	.+12     	; 0x8c2 <__divsf3+0x18>
 8b6:	21 f4       	brne	.+8      	; 0x8c0 <__divsf3+0x16>
 8b8:	5f 3f       	cpi	r21, 0xFF	; 255
 8ba:	19 f0       	breq	.+6      	; 0x8c2 <__divsf3+0x18>
 8bc:	bf c0       	rjmp	.+382    	; 0xa3c <__fp_inf>
 8be:	51 11       	cpse	r21, r1
 8c0:	08 c1       	rjmp	.+528    	; 0xad2 <__fp_szero>
 8c2:	c2 c0       	rjmp	.+388    	; 0xa48 <__fp_nan>

000008c4 <__divsf3x>:
 8c4:	e3 d0       	rcall	.+454    	; 0xa8c <__fp_split3>
 8c6:	98 f3       	brcs	.-26     	; 0x8ae <__divsf3+0x4>

000008c8 <__divsf3_pse>:
 8c8:	99 23       	and	r25, r25
 8ca:	c9 f3       	breq	.-14     	; 0x8be <__divsf3+0x14>
 8cc:	55 23       	and	r21, r21
 8ce:	b1 f3       	breq	.-20     	; 0x8bc <__divsf3+0x12>
 8d0:	95 1b       	sub	r25, r21
 8d2:	55 0b       	sbc	r21, r21
 8d4:	bb 27       	eor	r27, r27
 8d6:	aa 27       	eor	r26, r26
 8d8:	62 17       	cp	r22, r18
 8da:	73 07       	cpc	r23, r19
 8dc:	84 07       	cpc	r24, r20
 8de:	38 f0       	brcs	.+14     	; 0x8ee <__divsf3_pse+0x26>
 8e0:	9f 5f       	subi	r25, 0xFF	; 255
 8e2:	5f 4f       	sbci	r21, 0xFF	; 255
 8e4:	22 0f       	add	r18, r18
 8e6:	33 1f       	adc	r19, r19
 8e8:	44 1f       	adc	r20, r20
 8ea:	aa 1f       	adc	r26, r26
 8ec:	a9 f3       	breq	.-22     	; 0x8d8 <__divsf3_pse+0x10>
 8ee:	33 d0       	rcall	.+102    	; 0x956 <__divsf3_pse+0x8e>
 8f0:	0e 2e       	mov	r0, r30
 8f2:	3a f0       	brmi	.+14     	; 0x902 <__divsf3_pse+0x3a>
 8f4:	e0 e8       	ldi	r30, 0x80	; 128
 8f6:	30 d0       	rcall	.+96     	; 0x958 <__divsf3_pse+0x90>
 8f8:	91 50       	subi	r25, 0x01	; 1
 8fa:	50 40       	sbci	r21, 0x00	; 0
 8fc:	e6 95       	lsr	r30
 8fe:	00 1c       	adc	r0, r0
 900:	ca f7       	brpl	.-14     	; 0x8f4 <__divsf3_pse+0x2c>
 902:	29 d0       	rcall	.+82     	; 0x956 <__divsf3_pse+0x8e>
 904:	fe 2f       	mov	r31, r30
 906:	27 d0       	rcall	.+78     	; 0x956 <__divsf3_pse+0x8e>
 908:	66 0f       	add	r22, r22
 90a:	77 1f       	adc	r23, r23
 90c:	88 1f       	adc	r24, r24
 90e:	bb 1f       	adc	r27, r27
 910:	26 17       	cp	r18, r22
 912:	37 07       	cpc	r19, r23
 914:	48 07       	cpc	r20, r24
 916:	ab 07       	cpc	r26, r27
 918:	b0 e8       	ldi	r27, 0x80	; 128
 91a:	09 f0       	breq	.+2      	; 0x91e <__divsf3_pse+0x56>
 91c:	bb 0b       	sbc	r27, r27
 91e:	80 2d       	mov	r24, r0
 920:	bf 01       	movw	r22, r30
 922:	ff 27       	eor	r31, r31
 924:	93 58       	subi	r25, 0x83	; 131
 926:	5f 4f       	sbci	r21, 0xFF	; 255
 928:	2a f0       	brmi	.+10     	; 0x934 <__divsf3_pse+0x6c>
 92a:	9e 3f       	cpi	r25, 0xFE	; 254
 92c:	51 05       	cpc	r21, r1
 92e:	68 f0       	brcs	.+26     	; 0x94a <__divsf3_pse+0x82>
 930:	85 c0       	rjmp	.+266    	; 0xa3c <__fp_inf>
 932:	cf c0       	rjmp	.+414    	; 0xad2 <__fp_szero>
 934:	5f 3f       	cpi	r21, 0xFF	; 255
 936:	ec f3       	brlt	.-6      	; 0x932 <__divsf3_pse+0x6a>
 938:	98 3e       	cpi	r25, 0xE8	; 232
 93a:	dc f3       	brlt	.-10     	; 0x932 <__divsf3_pse+0x6a>
 93c:	86 95       	lsr	r24
 93e:	77 95       	ror	r23
 940:	67 95       	ror	r22
 942:	b7 95       	ror	r27
 944:	f7 95       	ror	r31
 946:	9f 5f       	subi	r25, 0xFF	; 255
 948:	c9 f7       	brne	.-14     	; 0x93c <__divsf3_pse+0x74>
 94a:	88 0f       	add	r24, r24
 94c:	91 1d       	adc	r25, r1
 94e:	96 95       	lsr	r25
 950:	87 95       	ror	r24
 952:	97 f9       	bld	r25, 7
 954:	08 95       	ret
 956:	e1 e0       	ldi	r30, 0x01	; 1
 958:	66 0f       	add	r22, r22
 95a:	77 1f       	adc	r23, r23
 95c:	88 1f       	adc	r24, r24
 95e:	bb 1f       	adc	r27, r27
 960:	62 17       	cp	r22, r18
 962:	73 07       	cpc	r23, r19
 964:	84 07       	cpc	r24, r20
 966:	ba 07       	cpc	r27, r26
 968:	20 f0       	brcs	.+8      	; 0x972 <__divsf3_pse+0xaa>
 96a:	62 1b       	sub	r22, r18
 96c:	73 0b       	sbc	r23, r19
 96e:	84 0b       	sbc	r24, r20
 970:	ba 0b       	sbc	r27, r26
 972:	ee 1f       	adc	r30, r30
 974:	88 f7       	brcc	.-30     	; 0x958 <__divsf3_pse+0x90>
 976:	e0 95       	com	r30
 978:	08 95       	ret

0000097a <__floatunsisf>:
 97a:	e8 94       	clt
 97c:	09 c0       	rjmp	.+18     	; 0x990 <__floatsisf+0x12>

0000097e <__floatsisf>:
 97e:	97 fb       	bst	r25, 7
 980:	3e f4       	brtc	.+14     	; 0x990 <__floatsisf+0x12>
 982:	90 95       	com	r25
 984:	80 95       	com	r24
 986:	70 95       	com	r23
 988:	61 95       	neg	r22
 98a:	7f 4f       	sbci	r23, 0xFF	; 255
 98c:	8f 4f       	sbci	r24, 0xFF	; 255
 98e:	9f 4f       	sbci	r25, 0xFF	; 255
 990:	99 23       	and	r25, r25
 992:	a9 f0       	breq	.+42     	; 0x9be <__floatsisf+0x40>
 994:	f9 2f       	mov	r31, r25
 996:	96 e9       	ldi	r25, 0x96	; 150
 998:	bb 27       	eor	r27, r27
 99a:	93 95       	inc	r25
 99c:	f6 95       	lsr	r31
 99e:	87 95       	ror	r24
 9a0:	77 95       	ror	r23
 9a2:	67 95       	ror	r22
 9a4:	b7 95       	ror	r27
 9a6:	f1 11       	cpse	r31, r1
 9a8:	f8 cf       	rjmp	.-16     	; 0x99a <__floatsisf+0x1c>
 9aa:	fa f4       	brpl	.+62     	; 0x9ea <__floatsisf+0x6c>
 9ac:	bb 0f       	add	r27, r27
 9ae:	11 f4       	brne	.+4      	; 0x9b4 <__floatsisf+0x36>
 9b0:	60 ff       	sbrs	r22, 0
 9b2:	1b c0       	rjmp	.+54     	; 0x9ea <__floatsisf+0x6c>
 9b4:	6f 5f       	subi	r22, 0xFF	; 255
 9b6:	7f 4f       	sbci	r23, 0xFF	; 255
 9b8:	8f 4f       	sbci	r24, 0xFF	; 255
 9ba:	9f 4f       	sbci	r25, 0xFF	; 255
 9bc:	16 c0       	rjmp	.+44     	; 0x9ea <__floatsisf+0x6c>
 9be:	88 23       	and	r24, r24
 9c0:	11 f0       	breq	.+4      	; 0x9c6 <__floatsisf+0x48>
 9c2:	96 e9       	ldi	r25, 0x96	; 150
 9c4:	11 c0       	rjmp	.+34     	; 0x9e8 <__floatsisf+0x6a>
 9c6:	77 23       	and	r23, r23
 9c8:	21 f0       	breq	.+8      	; 0x9d2 <__floatsisf+0x54>
 9ca:	9e e8       	ldi	r25, 0x8E	; 142
 9cc:	87 2f       	mov	r24, r23
 9ce:	76 2f       	mov	r23, r22
 9d0:	05 c0       	rjmp	.+10     	; 0x9dc <__floatsisf+0x5e>
 9d2:	66 23       	and	r22, r22
 9d4:	71 f0       	breq	.+28     	; 0x9f2 <__floatsisf+0x74>
 9d6:	96 e8       	ldi	r25, 0x86	; 134
 9d8:	86 2f       	mov	r24, r22
 9da:	70 e0       	ldi	r23, 0x00	; 0
 9dc:	60 e0       	ldi	r22, 0x00	; 0
 9de:	2a f0       	brmi	.+10     	; 0x9ea <__floatsisf+0x6c>
 9e0:	9a 95       	dec	r25
 9e2:	66 0f       	add	r22, r22
 9e4:	77 1f       	adc	r23, r23
 9e6:	88 1f       	adc	r24, r24
 9e8:	da f7       	brpl	.-10     	; 0x9e0 <__floatsisf+0x62>
 9ea:	88 0f       	add	r24, r24
 9ec:	96 95       	lsr	r25
 9ee:	87 95       	ror	r24
 9f0:	97 f9       	bld	r25, 7
 9f2:	08 95       	ret

000009f4 <__fp_cmp>:
 9f4:	99 0f       	add	r25, r25
 9f6:	00 08       	sbc	r0, r0
 9f8:	55 0f       	add	r21, r21
 9fa:	aa 0b       	sbc	r26, r26
 9fc:	e0 e8       	ldi	r30, 0x80	; 128
 9fe:	fe ef       	ldi	r31, 0xFE	; 254
 a00:	16 16       	cp	r1, r22
 a02:	17 06       	cpc	r1, r23
 a04:	e8 07       	cpc	r30, r24
 a06:	f9 07       	cpc	r31, r25
 a08:	c0 f0       	brcs	.+48     	; 0xa3a <__fp_cmp+0x46>
 a0a:	12 16       	cp	r1, r18
 a0c:	13 06       	cpc	r1, r19
 a0e:	e4 07       	cpc	r30, r20
 a10:	f5 07       	cpc	r31, r21
 a12:	98 f0       	brcs	.+38     	; 0xa3a <__fp_cmp+0x46>
 a14:	62 1b       	sub	r22, r18
 a16:	73 0b       	sbc	r23, r19
 a18:	84 0b       	sbc	r24, r20
 a1a:	95 0b       	sbc	r25, r21
 a1c:	39 f4       	brne	.+14     	; 0xa2c <__fp_cmp+0x38>
 a1e:	0a 26       	eor	r0, r26
 a20:	61 f0       	breq	.+24     	; 0xa3a <__fp_cmp+0x46>
 a22:	23 2b       	or	r18, r19
 a24:	24 2b       	or	r18, r20
 a26:	25 2b       	or	r18, r21
 a28:	21 f4       	brne	.+8      	; 0xa32 <__fp_cmp+0x3e>
 a2a:	08 95       	ret
 a2c:	0a 26       	eor	r0, r26
 a2e:	09 f4       	brne	.+2      	; 0xa32 <__fp_cmp+0x3e>
 a30:	a1 40       	sbci	r26, 0x01	; 1
 a32:	a6 95       	lsr	r26
 a34:	8f ef       	ldi	r24, 0xFF	; 255
 a36:	81 1d       	adc	r24, r1
 a38:	81 1d       	adc	r24, r1
 a3a:	08 95       	ret

00000a3c <__fp_inf>:
 a3c:	97 f9       	bld	r25, 7
 a3e:	9f 67       	ori	r25, 0x7F	; 127
 a40:	80 e8       	ldi	r24, 0x80	; 128
 a42:	70 e0       	ldi	r23, 0x00	; 0
 a44:	60 e0       	ldi	r22, 0x00	; 0
 a46:	08 95       	ret

00000a48 <__fp_nan>:
 a48:	9f ef       	ldi	r25, 0xFF	; 255
 a4a:	80 ec       	ldi	r24, 0xC0	; 192
 a4c:	08 95       	ret

00000a4e <__fp_pscA>:
 a4e:	00 24       	eor	r0, r0
 a50:	0a 94       	dec	r0
 a52:	16 16       	cp	r1, r22
 a54:	17 06       	cpc	r1, r23
 a56:	18 06       	cpc	r1, r24
 a58:	09 06       	cpc	r0, r25
 a5a:	08 95       	ret

00000a5c <__fp_pscB>:
 a5c:	00 24       	eor	r0, r0
 a5e:	0a 94       	dec	r0
 a60:	12 16       	cp	r1, r18
 a62:	13 06       	cpc	r1, r19
 a64:	14 06       	cpc	r1, r20
 a66:	05 06       	cpc	r0, r21
 a68:	08 95       	ret

00000a6a <__fp_round>:
 a6a:	09 2e       	mov	r0, r25
 a6c:	03 94       	inc	r0
 a6e:	00 0c       	add	r0, r0
 a70:	11 f4       	brne	.+4      	; 0xa76 <__fp_round+0xc>
 a72:	88 23       	and	r24, r24
 a74:	52 f0       	brmi	.+20     	; 0xa8a <__fp_round+0x20>
 a76:	bb 0f       	add	r27, r27
 a78:	40 f4       	brcc	.+16     	; 0xa8a <__fp_round+0x20>
 a7a:	bf 2b       	or	r27, r31
 a7c:	11 f4       	brne	.+4      	; 0xa82 <__fp_round+0x18>
 a7e:	60 ff       	sbrs	r22, 0
 a80:	04 c0       	rjmp	.+8      	; 0xa8a <__fp_round+0x20>
 a82:	6f 5f       	subi	r22, 0xFF	; 255
 a84:	7f 4f       	sbci	r23, 0xFF	; 255
 a86:	8f 4f       	sbci	r24, 0xFF	; 255
 a88:	9f 4f       	sbci	r25, 0xFF	; 255
 a8a:	08 95       	ret

00000a8c <__fp_split3>:
 a8c:	57 fd       	sbrc	r21, 7
 a8e:	90 58       	subi	r25, 0x80	; 128
 a90:	44 0f       	add	r20, r20
 a92:	55 1f       	adc	r21, r21
 a94:	59 f0       	breq	.+22     	; 0xaac <__fp_splitA+0x10>
 a96:	5f 3f       	cpi	r21, 0xFF	; 255
 a98:	71 f0       	breq	.+28     	; 0xab6 <__fp_splitA+0x1a>
 a9a:	47 95       	ror	r20

00000a9c <__fp_splitA>:
 a9c:	88 0f       	add	r24, r24
 a9e:	97 fb       	bst	r25, 7
 aa0:	99 1f       	adc	r25, r25
 aa2:	61 f0       	breq	.+24     	; 0xabc <__fp_splitA+0x20>
 aa4:	9f 3f       	cpi	r25, 0xFF	; 255
 aa6:	79 f0       	breq	.+30     	; 0xac6 <__fp_splitA+0x2a>
 aa8:	87 95       	ror	r24
 aaa:	08 95       	ret
 aac:	12 16       	cp	r1, r18
 aae:	13 06       	cpc	r1, r19
 ab0:	14 06       	cpc	r1, r20
 ab2:	55 1f       	adc	r21, r21
 ab4:	f2 cf       	rjmp	.-28     	; 0xa9a <__fp_split3+0xe>
 ab6:	46 95       	lsr	r20
 ab8:	f1 df       	rcall	.-30     	; 0xa9c <__fp_splitA>
 aba:	08 c0       	rjmp	.+16     	; 0xacc <__fp_splitA+0x30>
 abc:	16 16       	cp	r1, r22
 abe:	17 06       	cpc	r1, r23
 ac0:	18 06       	cpc	r1, r24
 ac2:	99 1f       	adc	r25, r25
 ac4:	f1 cf       	rjmp	.-30     	; 0xaa8 <__fp_splitA+0xc>
 ac6:	86 95       	lsr	r24
 ac8:	71 05       	cpc	r23, r1
 aca:	61 05       	cpc	r22, r1
 acc:	08 94       	sec
 ace:	08 95       	ret

00000ad0 <__fp_zero>:
 ad0:	e8 94       	clt

00000ad2 <__fp_szero>:
 ad2:	bb 27       	eor	r27, r27
 ad4:	66 27       	eor	r22, r22
 ad6:	77 27       	eor	r23, r23
 ad8:	cb 01       	movw	r24, r22
 ada:	97 f9       	bld	r25, 7
 adc:	08 95       	ret

00000ade <__gesf2>:
 ade:	8a df       	rcall	.-236    	; 0x9f4 <__fp_cmp>
 ae0:	08 f4       	brcc	.+2      	; 0xae4 <__gesf2+0x6>
 ae2:	8f ef       	ldi	r24, 0xFF	; 255
 ae4:	08 95       	ret

00000ae6 <__mulsf3>:
 ae6:	0b d0       	rcall	.+22     	; 0xafe <__mulsf3x>
 ae8:	c0 cf       	rjmp	.-128    	; 0xa6a <__fp_round>
 aea:	b1 df       	rcall	.-158    	; 0xa4e <__fp_pscA>
 aec:	28 f0       	brcs	.+10     	; 0xaf8 <__mulsf3+0x12>
 aee:	b6 df       	rcall	.-148    	; 0xa5c <__fp_pscB>
 af0:	18 f0       	brcs	.+6      	; 0xaf8 <__mulsf3+0x12>
 af2:	95 23       	and	r25, r21
 af4:	09 f0       	breq	.+2      	; 0xaf8 <__mulsf3+0x12>
 af6:	a2 cf       	rjmp	.-188    	; 0xa3c <__fp_inf>
 af8:	a7 cf       	rjmp	.-178    	; 0xa48 <__fp_nan>
 afa:	11 24       	eor	r1, r1
 afc:	ea cf       	rjmp	.-44     	; 0xad2 <__fp_szero>

00000afe <__mulsf3x>:
 afe:	c6 df       	rcall	.-116    	; 0xa8c <__fp_split3>
 b00:	a0 f3       	brcs	.-24     	; 0xaea <__mulsf3+0x4>

00000b02 <__mulsf3_pse>:
 b02:	95 9f       	mul	r25, r21
 b04:	d1 f3       	breq	.-12     	; 0xafa <__mulsf3+0x14>
 b06:	95 0f       	add	r25, r21
 b08:	50 e0       	ldi	r21, 0x00	; 0
 b0a:	55 1f       	adc	r21, r21
 b0c:	62 9f       	mul	r22, r18
 b0e:	f0 01       	movw	r30, r0
 b10:	72 9f       	mul	r23, r18
 b12:	bb 27       	eor	r27, r27
 b14:	f0 0d       	add	r31, r0
 b16:	b1 1d       	adc	r27, r1
 b18:	63 9f       	mul	r22, r19
 b1a:	aa 27       	eor	r26, r26
 b1c:	f0 0d       	add	r31, r0
 b1e:	b1 1d       	adc	r27, r1
 b20:	aa 1f       	adc	r26, r26
 b22:	64 9f       	mul	r22, r20
 b24:	66 27       	eor	r22, r22
 b26:	b0 0d       	add	r27, r0
 b28:	a1 1d       	adc	r26, r1
 b2a:	66 1f       	adc	r22, r22
 b2c:	82 9f       	mul	r24, r18
 b2e:	22 27       	eor	r18, r18
 b30:	b0 0d       	add	r27, r0
 b32:	a1 1d       	adc	r26, r1
 b34:	62 1f       	adc	r22, r18
 b36:	73 9f       	mul	r23, r19
 b38:	b0 0d       	add	r27, r0
 b3a:	a1 1d       	adc	r26, r1
 b3c:	62 1f       	adc	r22, r18
 b3e:	83 9f       	mul	r24, r19
 b40:	a0 0d       	add	r26, r0
 b42:	61 1d       	adc	r22, r1
 b44:	22 1f       	adc	r18, r18
 b46:	74 9f       	mul	r23, r20
 b48:	33 27       	eor	r19, r19
 b4a:	a0 0d       	add	r26, r0
 b4c:	61 1d       	adc	r22, r1
 b4e:	23 1f       	adc	r18, r19
 b50:	84 9f       	mul	r24, r20
 b52:	60 0d       	add	r22, r0
 b54:	21 1d       	adc	r18, r1
 b56:	82 2f       	mov	r24, r18
 b58:	76 2f       	mov	r23, r22
 b5a:	6a 2f       	mov	r22, r26
 b5c:	11 24       	eor	r1, r1
 b5e:	9f 57       	subi	r25, 0x7F	; 127
 b60:	50 40       	sbci	r21, 0x00	; 0
 b62:	8a f0       	brmi	.+34     	; 0xb86 <__mulsf3_pse+0x84>
 b64:	e1 f0       	breq	.+56     	; 0xb9e <__mulsf3_pse+0x9c>
 b66:	88 23       	and	r24, r24
 b68:	4a f0       	brmi	.+18     	; 0xb7c <__mulsf3_pse+0x7a>
 b6a:	ee 0f       	add	r30, r30
 b6c:	ff 1f       	adc	r31, r31
 b6e:	bb 1f       	adc	r27, r27
 b70:	66 1f       	adc	r22, r22
 b72:	77 1f       	adc	r23, r23
 b74:	88 1f       	adc	r24, r24
 b76:	91 50       	subi	r25, 0x01	; 1
 b78:	50 40       	sbci	r21, 0x00	; 0
 b7a:	a9 f7       	brne	.-22     	; 0xb66 <__mulsf3_pse+0x64>
 b7c:	9e 3f       	cpi	r25, 0xFE	; 254
 b7e:	51 05       	cpc	r21, r1
 b80:	70 f0       	brcs	.+28     	; 0xb9e <__mulsf3_pse+0x9c>
 b82:	5c cf       	rjmp	.-328    	; 0xa3c <__fp_inf>
 b84:	a6 cf       	rjmp	.-180    	; 0xad2 <__fp_szero>
 b86:	5f 3f       	cpi	r21, 0xFF	; 255
 b88:	ec f3       	brlt	.-6      	; 0xb84 <__mulsf3_pse+0x82>
 b8a:	98 3e       	cpi	r25, 0xE8	; 232
 b8c:	dc f3       	brlt	.-10     	; 0xb84 <__mulsf3_pse+0x82>
 b8e:	86 95       	lsr	r24
 b90:	77 95       	ror	r23
 b92:	67 95       	ror	r22
 b94:	b7 95       	ror	r27
 b96:	f7 95       	ror	r31
 b98:	e7 95       	ror	r30
 b9a:	9f 5f       	subi	r25, 0xFF	; 255
 b9c:	c1 f7       	brne	.-16     	; 0xb8e <__mulsf3_pse+0x8c>
 b9e:	fe 2b       	or	r31, r30
 ba0:	88 0f       	add	r24, r24
 ba2:	91 1d       	adc	r25, r1
 ba4:	96 95       	lsr	r25
 ba6:	87 95       	ror	r24
 ba8:	97 f9       	bld	r25, 7
 baa:	08 95       	ret

00000bac <__divmodhi4>:
 bac:	97 fb       	bst	r25, 7
 bae:	07 2e       	mov	r0, r23
 bb0:	16 f4       	brtc	.+4      	; 0xbb6 <__divmodhi4+0xa>
 bb2:	00 94       	com	r0
 bb4:	06 d0       	rcall	.+12     	; 0xbc2 <__divmodhi4_neg1>
 bb6:	77 fd       	sbrc	r23, 7
 bb8:	08 d0       	rcall	.+16     	; 0xbca <__divmodhi4_neg2>
 bba:	1a d0       	rcall	.+52     	; 0xbf0 <__udivmodhi4>
 bbc:	07 fc       	sbrc	r0, 7
 bbe:	05 d0       	rcall	.+10     	; 0xbca <__divmodhi4_neg2>
 bc0:	3e f4       	brtc	.+14     	; 0xbd0 <__divmodhi4_exit>

00000bc2 <__divmodhi4_neg1>:
 bc2:	90 95       	com	r25
 bc4:	81 95       	neg	r24
 bc6:	9f 4f       	sbci	r25, 0xFF	; 255
 bc8:	08 95       	ret

00000bca <__divmodhi4_neg2>:
 bca:	70 95       	com	r23
 bcc:	61 95       	neg	r22
 bce:	7f 4f       	sbci	r23, 0xFF	; 255

00000bd0 <__divmodhi4_exit>:
 bd0:	08 95       	ret

00000bd2 <__umulhisi3>:
 bd2:	a2 9f       	mul	r26, r18
 bd4:	b0 01       	movw	r22, r0
 bd6:	b3 9f       	mul	r27, r19
 bd8:	c0 01       	movw	r24, r0
 bda:	a3 9f       	mul	r26, r19
 bdc:	70 0d       	add	r23, r0
 bde:	81 1d       	adc	r24, r1
 be0:	11 24       	eor	r1, r1
 be2:	91 1d       	adc	r25, r1
 be4:	b2 9f       	mul	r27, r18
 be6:	70 0d       	add	r23, r0
 be8:	81 1d       	adc	r24, r1
 bea:	11 24       	eor	r1, r1
 bec:	91 1d       	adc	r25, r1
 bee:	08 95       	ret

00000bf0 <__udivmodhi4>:
 bf0:	aa 1b       	sub	r26, r26
 bf2:	bb 1b       	sub	r27, r27
 bf4:	51 e1       	ldi	r21, 0x11	; 17
 bf6:	07 c0       	rjmp	.+14     	; 0xc06 <__udivmodhi4_ep>

00000bf8 <__udivmodhi4_loop>:
 bf8:	aa 1f       	adc	r26, r26
 bfa:	bb 1f       	adc	r27, r27
 bfc:	a6 17       	cp	r26, r22
 bfe:	b7 07       	cpc	r27, r23
 c00:	10 f0       	brcs	.+4      	; 0xc06 <__udivmodhi4_ep>
 c02:	a6 1b       	sub	r26, r22
 c04:	b7 0b       	sbc	r27, r23

00000c06 <__udivmodhi4_ep>:
 c06:	88 1f       	adc	r24, r24
 c08:	99 1f       	adc	r25, r25
 c0a:	5a 95       	dec	r21
 c0c:	a9 f7       	brne	.-22     	; 0xbf8 <__udivmodhi4_loop>
 c0e:	80 95       	com	r24
 c10:	90 95       	com	r25
 c12:	bc 01       	movw	r22, r24
 c14:	cd 01       	movw	r24, r26
 c16:	08 95       	ret

00000c18 <_exit>:
 c18:	f8 94       	cli

00000c1a <__stop_program>:
 c1a:	ff cf       	rjmp	.-2      	; 0xc1a <__stop_program>
